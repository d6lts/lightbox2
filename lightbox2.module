<?php
/**
 * Enables the use of lightbox V2 which places images above your current page, not within.
 * This frees you from the constraints of the layout, particularly column widths.
 * 
 * This module is for Drupal 4.7.x only.
 *
 * Module by: Mark Ashmead
 * Mailto: bugzie@gmail.com
 *
 * Image Node Support: Steve McKenzie
 *
*/

/**
 *	GLOBAL VARIABLES
 */
$LIGHTBOX2_INCLUDE = false;

/**
 * Displays the information for this module.
 * Displays the help text for this module.
 *
 */
/**
 * Implementation of hook_help().
 */
function lightbox2_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t('Enables Lightbox V2 for Drupal');
    case 'admin/help#lightbox2':
      return t('<h3>Overview</h3>
      <p align="justify">Lightbox JS V2 is a simple, unobtrusive script used to overlay images on the current page. It\'s a snap to setup and works on all modern browsers.</p>
      <p align="justify">Places images above your current page, not within. This frees you from the constraints of the layout, particularly column widths. Keeps users on the same page. Clicking to view an image and then having to click the back button to return to your site is bad for continuity (and no fun!).</p>
      <p align="justify"><strong>Usage</strong></p>
      <p>Add rel=&quot;lightbox&quot; attribute to any link tag to activate the lightbox. For example: </p>
      <p>&lt;a href=&quot;image-1.jpg&quot; rel=&quot;lightbox&quot; title=&quot;my caption&quot;&gt;image #1&lt;/a&gt;</p>
      <p>Optional: Use the title attribute if you want to show a caption.</p>
	  <p>If you have a set of related images that you would like to group, follow step one but additionally include a group name between square brackets in the rel attribute. For example:</p><p>&lt;a href="images/image-1.jpg" rel="lightbox[roadtrip]"&gt;image #1&lt;/a&gt;<br>
&lt;a href="images/image-2.jpg" rel="lightbox[roadtrip]"&gt;image #2&lt;/a&gt;<br>
&lt;a href="images/image-3.jpg" rel="lightbox[roadtrip]"&gt;image #3&lt;/a&gt;<br></p>
<p>No limits to the number of image sets per page or how many images are allowed in each set. Go nuts!</p>
	<p align="justify"><strong>Known Issues</strong></p>
	<p>Image Issues - An issue has been identified with the loading of certain images when using the module. (close.gif, prevlabel.gif, nextlabel.gif)</p>
    <p>If your installation of Drupal exists in the root of your domain, i.e., www.yourinstallation.com then you shouldn\'t have any problems. The issue only occurs when Drupal is installed in a subdirectory, i.e., www.yourinstallation.com/subdirectory.</p>
    <p>If this is the case, you will need to edit the lightbox.js on lines 63, 64 and 65 to reflect the fully qualified URL of your images. In the above case, this would be as follows;</p>
    <p>var fileLoadingImage = &quot;/modules/lightbox2/images/loading.gif&quot;;<br>
      var fileBottomNavCloseImage = &quot;/modules/lightbox2/images/closelabel.gif&quot;;<br>
      var fileBottomNavZoomImage = &quot;/modules/lightbox2/images/expand.gif&quot;; //Update to 2.02+</p>
    <p>should be changed to</p>
    <p>var fileLoadingImage = &quot;/subdirectory/modules/lightbox2/images/loading.gif&quot;;<br>
      var fileBottomNavCloseImage = &quot;/subdirectory/modules/lightbox2/images/closelabel.gif&quot;;<br>
      var fileBottomNavZoomImage = &quot;/subdirectory/modules/lightbox2/images/expand.gif&quot;; //Update to 2.02+</p>
    <p>There may be other methods that can be used to acheive this, but this should be the simplest for those with little or no programming experience.</p>');
      break;
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function lightbox2_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {	
	global $LIGHTBOX2_INCLUDE;
	
	if ($op == "view" && !$LIGHTBOX2_INCLUDE) {
		lightbox2_add_files();
		$LIGHTBOX2_INCLUDE = true;
	}
}

/**
 * Implementation of hook_settings().
 */
function lightbox2_settings() {	
	// Define Lightbox2 Plus form.
	$form["lightbox2_plus_options"] = array(
		"#type" => "fieldset",
		"#title" => t("Lightbox2 Plus")
	);
	// Add Checkbox for Image Node
	$form["lightbox2_plus_options"]["lightbox2_plus"]  = array(
		"#type" => "checkbox",
		"#title" => t("Use Lightbox2 Plus"),
		"#default_value" => variable_get("lightbox2_plus", true),
		"#return_value" => true
	);
	// Define Image Node Options form.
	$form["image_node_options"] = array(
		"#type" => "fieldset",
		"#title" => t("Lightbox2 Plus Image Node options")
	);
	// Add Checkbox for Image Node
	$form["image_node_options"]["lightbox2_image_node"]  = array(
		"#type" => "checkbox",
		"#title" => t("Enable for Image Nodes"),
		"#default_value" => variable_get("lightbox2_image_node", true),
		"#return_value" => true
	);
	// Add Checkbox for Gallery2 Image Filter
	$form["image_node_options"]["lightbox2G2_filter"]  = array(
		"#type" => "checkbox",
		"#title" => t("Enable Gallery 2 Filter"),
		"#default_value" => variable_get("lightbox2G2_filter", true),
		"#return_value" => true
	);
	
	return $form;
}
/**
 *Implementation of hook_filter().
 */
function lightbox2_filter_tips($delta, $format, $long = false) {
    return t('Image links from G2 are formatted for use with Lightbox.V2');
}
// Check to see if the G2 Filter is Enabled in Settings
if (variable_get("lightbox2G2_filter", true)) {
function lightbox2_filter($op, $delta = 0, $format = -1, $text = '') {
  switch ($op) {
    case 'list':
      return array(0 => t('Lightbox filter'));
    case 'description':
      return t('Turns g2_filter links into Lighbox.V2 appropriate links');
    case 'process':
        $text = ' ' . $text . ' ';
        $text = preg_replace('/ShowItem/','DownloadItem',$text);
        $text = preg_replace('/target=""/','rel="lightbox"',$text);
        $text = substr($text, 1, -1);
    return $text;
    default:
      return $text;
  }
 }
}
/**
 * Provides a link to the CSS stylesheet associated with this module.
 * Provides a link to the JS file associated with this module.
 */

function lightbox2_add_files() {
  // Load required js and css files.
  $path = drupal_get_path('module', 'lightbox2');
	if (variable_get("lightbox2_plus", true)) {
  	theme("add_style", $path . '/lightbox.css');
  		// Check to see if Libraries are installed Correctly.
  		if (file_exists($path .'/js/prototype.js')) {
			drupal_add_js($path . '/js/prototype.js');
 	 		// Check to see if the Image Node Option is Enabled in Settings
 	 		if (variable_get("lightbox2_image_node", true)) {
  				drupal_add_js($path . "/js/image_nodes.js");
 	 		}
  			drupal_add_js($path . '/js/scriptaculous.js');
  			drupal_add_js($path . '/js/lightbox.js');
  		}
 		else {
      	drupal_set_message(t('The script.aculo.us library is in not installed correctly. Please download from <a href="http://script.aculo.us/downloads">http://script.aculo.us/downloads</a>, follow the instructions in the Lightbox V.2 README.TXT file to copy the files to their correct locations.'), 'error');
    	}
	}
 	else {
 	theme("add_style", $path . '/lightbox_lite.css');
 	drupal_add_js($path . '/js/lightbox_lite.js');
    }
}
